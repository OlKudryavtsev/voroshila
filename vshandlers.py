#!/usr/bin/env python
# -*- coding: utf-8 -*-


from telegram.ext import Updater, CommandHandler, MessageHandler, Filters, CallbackQueryHandler, ConversationHandler
from telegram import InlineKeyboardButton, InlineKeyboardMarkup, ReplyKeyboardMarkup
import logging
from functools import wraps
from emoji import emojize
import time
import datetime
import random
from tabulate import tabulate

import os, fnmatch
import re

from vsfunc import *

SELECT, TEAM, MATCH = range(3)
KEYBOARD, KEYBOARDECHO, ARCHIVE, ARCHIVEECHO = range(4)

HELP_SYNONYMS = ["–ø–æ–º–æ–≥–∏!", "–ø–æ–º–æ–≥–∏", "–Ω–∞ –ø–æ–º–æ—â—å", "help!", "help", "—á—Ç–æ —É–º–µ–µ—à—å", "–∫–∞–∫ –≤—ã–ø–æ–ª–Ω–∏—Ç—å?", "?", "‚ö†–ø–æ–º–æ—â—å"]
WINNER_SYNONYMS = ["–∫—Ç–æ –ø–æ–±–µ–¥–∏–ª?", "–∫—Ç–æ –ø–æ–±–µ–¥–∏–ª", "–ø–æ–∫–∞–∂–∏ –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–π", "–ø–æ–∫–∞–∂–∏ —á–µ–º–ø–∏–æ–Ω–æ–≤", "winners", "champion",
                   "–ø–æ–±–µ–¥–∏—Ç–µ–ª–∏", "—á–µ–º–ø–∏–æ–Ω—ã", "üèÜ–≤—Å–µ –ø–æ–±–µ–¥–∏—Ç–µ–ª–∏"]
TABLE_SYNONYMS = ["—Ç–∞–±–ª–∏—Ü–∞", "–ø–æ–∫–∞–∂–∏ —Ç–∞–±–ª–∏—Ü—É", "—Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã", "–∏—Ç–æ–≥", "üìÖ–∏—Ç–æ–≥–∏ —Ç—É—Ä–Ω–∏—Ä–∞ –≤—Å2017"]
LINK_SYNONYMS = ["—Å—Å—ã–ª–∫–∞", "—Å—Å—ã–ª–∫–∏", "–≥–¥–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å", "googledocs", "docs", "‚ûï—Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –º–∞—Ç—á–µ–π"]
TEAMS_SYNONYMS = ["–∫—Ç–æ —É—á–∞—Å—Ç–≤—É–µ—Ç?", "–∫—Ç–æ —É—á–∞—Å—Ç–≤—É–µ—Ç", "—É—á–∞—Å—Ç–Ω–∏–∫–∏", "–∫—Ç–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª—Å—è?", "–∫—Ç–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª—Å—è",
                  "–∫–æ–º–∞–Ω–¥—ã", "–ø–æ–∫–∞–∂–∏ –∫–æ–º–∞–Ω–¥—ã", "‚öΩ—Å–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤"]
REGLAMENT_SYNONUMS = ["üìù—Ä–µ–≥–ª–∞–º–µ–Ω—Ç —Ç—É—Ä–Ω–∏—Ä–∞", "—Ä–µ–≥–ª–∞–º–µ–Ω—Ç", "–ø–æ–∫–∞–∂–∏ —Ä–µ–≥–ª–∞–º–µ–Ω—Ç", "–∫–∞–∫ –∏–≥—Ä–∞–µ–º"]

BASIC_MENU = ["1", "2", "3", "4", "5", "6"]
YEARS = ["2017", "2018"]

LIST_OF_ADMINS = [230308082, 186972507]
#LIST_OF_ADMINS = [230308082]
# –°–ø–∏—Å–æ–∫ –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–π –ø—Ä–æ—à–ª—ã—Ö —Ç—É—Ä–Ω–∏—Ä–æ–≤
WINNERS = {
    '2012': '–í–∞–¥–∏–º –®–≤–µ—Ü–æ–≤',
    '2013': '–í–∞–¥–∏–º –®–≤–µ—Ü–æ–≤',
    '2015': '–û–ª–µ–≥ –ö—É–¥—Ä—è–≤—Ü–µ–≤',
    '2016': '–î–º–∏—Ç—Ä–∏–π –°–∞–º–æ–π–ª–æ–≤',
    '2017': '–ê–ª–µ–∫—Å–∞–Ω–¥—Ä –®–µ–≤—á–µ–Ω–∫–æ'
}

# –°—Å—ã–ª–∫–∏ –Ω–∞ google docs —Ç–∞–±–ª–∏—Ü—ã —Ç—É—Ä–Ω–∏—Ä–æ–≤
DOCLINKS = {
    '2018': 'https://docs.google.com/spreadsheets/d/1fRioNQwo5jFWS26egaVE9HwyNgZFn9qj376vr8mjdKo/edit#gid=1211524932',
    '2017': 'https://docs.google.com/spreadsheets/d/1OCN01o6SvG8PDTakbKm8TFQ4kU9HMCgWnRTbTfmjBdw/edit#gid=1211524932'
}

# Enable logging
logging.basicConfig(format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
                    level=logging.INFO)

logger = logging.getLogger(__name__)


# —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–∞ –∫ –≤—ã–∑–æ–≤–∞–º —Ö–∞–Ω–¥–ª–µ—Ä–æ–≤. –°–¢–∞–≤–∏—Ç—å @restricted –ø–µ—Ä–µ–¥ –Ω—É–∂–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–µ–π (def ...)
def restricted(func):
    @wraps(func)
    def wrapped(bot, update, *args, **kwargs):
        chat_id = update.message.chat_id
        user_id = update.effective_user.id
        if user_id not in LIST_OF_ADMINS:
            print("Unauthorized access denied for {}.".format(user_id))
            bot.send_message(chat_id=chat_id, text="–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —É —Ç–µ–±—è –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã ‚úãÔ∏è")
            return
        return func(bot, update, *args, **kwargs)

    return wrapped


# Define a few command handlers. These usually take the two arguments bot and
# update. Error handlers also receive the raised TelegramError object in error.
def start(bot, update):
    """Send a message when the command /start is issued."""
    # chat_id = bot.get_updates()[-1].message.chat_id

    try:
        chat_id = bot.get_updates()[-1].message.chat_id
    except IndexError:
        chat_id = update.message.chat_id
    insertnewuser(chat_id, update.message.from_user.first_name, update.message.from_user.last_name)
    bot.send_message(chat_id=230308082,
                     text="–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –Ω–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: " + update.message.from_user.first_name + " " + update.message.from_user.last_name)
    update.message.reply_text('–ü—Ä–∏–≤–µ—Ç, {}!'.format(update.message.from_user.first_name))
    update.message.reply_text('–¢–µ–±—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –±–æ—Ç —Ç—É—Ä–Ω–∏—Ä–∞ –í–æ—Ä–æ—à–∏–ª–æ–≤—Å–∫–∏–π —Å—Ç—Ä–µ–ª–æ–∫ ‚öΩÔ∏èüëç!')
    keyboard(bot, update)
    # update.message.reply_text('–ß—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å, —á—Ç–æ —è —É–º–µ—é, –Ω–∞–ø–∏—à–∏ /help')


def help(bot, update):
    """Send a message when the command /help is issued."""
    text = "–°–º–æ—Ç—Ä–∏, —á—Ç–æ —è —É–º–µ—é:"
    text += "\n/teamlist - –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤—à–∏—Ö—Å—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤"
    text += "\n/reglament - –ø–æ–∫–∞–∑–∞—Ç—å —Ä–µ–≥–ª–∞–º–µ–Ω—Ç —Ç—É—Ä–Ω–∏—Ä–∞ –í–°2018"
    text += "\n/winners - –ø–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–π –ø—Ä–æ—à–ª—ã—Ö —Ç—É—Ä–Ω–∏—Ä–æ–≤"
    text += "\n/links - –ø–æ–∫–∞–∑–∞—Ç—å —Å—Å—ã–ª–∫–∏ –Ω–∞ GoogleDocs"
    text += "\n/table2017 - –ø–æ–∫–∞–∑–∞—Ç—å —Ç—É—Ä–Ω–∏—Ä–Ω—É—é —Ç–∞–±–ª–∏—Ü—É –í–°2017"
    text += "\n/msgto - –Ω–∞–ø–∏—Å–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–º—É –∫–æ–Ω—Ç–∞–∫—Ç—É"
    text += "\n\n–ê –µ—â–µ —Ç—ã –º–æ–∂–µ—à—å –º–Ω–µ –ø—Ä–æ—Å—Ç–æ –ø–∏—Å–∞—Ç—å '–ø–æ–±–µ–¥–∏—Ç–µ–ª–∏','–ø–æ–º–æ—â—å','–ø–æ–∫–∞–∂–∏ —Ç–∞–±–ª–∏—Ü—É' –∏ —Ç.–¥."
    update.message.reply_text(text)


# —Ñ—É–Ω–∫—Ü–∏—è, –ø–æ–∫–∞–∑—ã–≤–∞—é—â–∞—è —Å–ø–∏—Å–æ–∫ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–≤—à–∏—Ö—Å—è –∫–æ–º–∞–Ω–¥
def teamlist(bot, update):
    """Send a message when the command /teamlist is issued."""
    TEAMS = getteaminfo()
    teamlist = ""
    i = 0
    for team in TEAMS:
        i = i + 1
        teamlist = teamlist + "\n" + str(i) + ". " + "\t" + team[2] + "\t" + team[3] + "\t" + team[1]
    update.message.reply_text('–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–≤—à–∏—Ö—Å—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ - ' + str(i))
    update.message.reply_text('–°–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤:\n' + teamlist)


# —Ñ—É–Ω–∫—Ü–∏—è, –ø–æ–∫–∞–∑—ã–≤–∞—é—â–∞—è —Å–ø–∏—Å–æ–∫ –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–π –ø—Ä–æ—à–ª—ã—Ö —Ç—É—Ä–Ω–∏—Ä–æ–≤
def winners(bot, update):
    """Send a message when the command /winners is issued."""
    # chat_id = update.message.chat_id
    winnerlist = ""
    for winner in WINNERS:
        winnerlist = winnerlist + "\n–í–°" + winner + ": \t" + WINNERS[winner]
    # bot.send_message(chat_id=chat_id, text='–ü–æ–±–µ–¥–∏—Ç–µ–ª–∏ —Ç—É—Ä–Ω–∏—Ä–∞:\n' + winnerlist)
    update.message.reply_text('–ü–æ–±–µ–¥–∏—Ç–µ–ª–∏ —Ç—É—Ä–Ω–∏—Ä–∞:\n' + winnerlist)


# —Ñ—É–Ω–∫—Ü–∏—è –≤—ã–≤–æ–¥–∞ —Ç–µ–∫—É—â–µ–≥–æ —Ä–µ–≥–ª–∞–º–µ–Ω—Ç–∞ —Ç—É—Ä–Ω–∏—Ä–∞
def reglament(bot, update):
    """Send a message when the command /reglament is issued."""
    reglament_text = "–í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ"
    REGLAMENT = """
–°–∏—Å—Ç–µ–º–∞: —Å–µ–∑–æ–Ω, 10 –∫–æ–º–∞–Ω–¥, 1 –∫—Ä—É–≥.
–ü–æ –∏—Ç–æ–≥–∞–º –≥—Ä—É–ø–ø —Å–æ—Å—Ç–æ—è—Ç—Å—è 2 —Ä–æ–∑—ã–≥—Ä—ã—à–∞ –ø–ª–µ–π–æ—Ñ—Ñ - –æ—Å–Ω–æ–≤–Ω–∞—è —Å–µ—Ç–∫–∞ –∏ —Å–µ—Ç–∫–∞ "–ª—É–∑–µ—Ä–æ–≤".
1 –∏ 2 –º–µ—Å—Ç–æ "—Ä–µ–≥—É–ª—è—Ä–∫–∏" —Å—Ä–∞–∑—É –≤—ã—Ö–æ–¥—è—Ç –≤ –ø–æ–ª—É—Ñ–∏–Ω–∞–ª.
3-6 –º–µ—Å—Ç–∞ –æ–±—Ä–∞–∑—É—é—Ç –¥–≤–µ –ø–∞—Ä—ã 1/4 –ø–ª–µ–π–æ—Ñ—Ñ (3-6, 4-5).
7-10 –º–µ—Å—Ç–∞ –æ–±—Ä–∞–∑—É—é—Ç –¥–≤–∞ –ø–æ–ª—É—Ñ–∏–Ω–∞–ª–∞ —Å–µ—Ç–∫–∏ "–ª—É–∑–µ—Ä–æ–≤" (7-10, 8-9).

–°—É–º–º–∞—Ä–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–≥—Ä –≤ —Å–µ–∑–æ–Ω–µ - 54 (45 —Ä–µ–≥—É–ª—è—Ä–∫–∞, 6 –æ—Å–Ω–æ–≤–Ω–æ–π –ø–ª–µ–π–æ—Ñ—Ñ, 3 - "–ª—É–∑–µ—Ä–æ–≤").

–ü—Ä–∏–∑—ã "—Ä–µ–≥—É–ª—è—Ä–∫–∏":
1 –º–µ—Å—Ç–æ - 1000—Ä
2-3 –º–µ—Å—Ç–∞ - –ø–æ 500—Ä
4-6 –º–µ—Å—Ç–∞ - –ø–æ 250—Ä

–ü—Ä–∏–∑—ã "—á–µ–º–ø–∏–æ–Ω–∞—Ç–∞":
ü•á - 3000—Ä
ü•à - 2000—Ä
ü•â - 1000—Ä
üèÜ —Å–µ—Ç–∫–∏ "–ª—É–∑–µ—Ä–æ–≤" - 1000—Ä

–°—Ç–∞—Ä—Ç —Ç—É—Ä–Ω–∏—Ä–∞: 28.01.2018.
–ö–∞–ª–µ–Ω–¥–∞—Ä—å –∏–≥—Ä –±—É–¥–µ—Ç –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω –≤ —Ç–µ—á–µ–Ω–∏–µ –Ω–µ–¥–µ–ª–∏.
    """
    update.message.reply_text(REGLAMENT)


# —Ñ—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞–∑–∞ —Ç—É—Ä–Ω–∏—Ä–Ω–æ–π —Ç–∞–±–ª–∏—Ü—ã –ø–æ –∏—Ç–æ–≥–∞–º 2017 –≥–æ–¥–∞
def table2017(bot, update):
    """Send a message when the command /table2017 is issued."""
    chat_id = update.message.chat_id
    bot.send_photo(chat_id=chat_id, photo=open('C:/–í–°/–í–°2017_table.png', 'rb'))


# —Ñ—É–Ω–∫—Ü–∏—è –æ—Ç–±—Ä–∞–∂–µ–Ω–∏—è —Å—Å—ã–ª–æ–∫ –Ω–∞ google docs –≤—Å–µ—Ö —Ç—É—Ä–Ω–∏—Ä–æ–≤
def links(bot, update):
    """Send a message when the command /links is issued."""
    links = ""
    for year in DOCLINKS:
        links = links + "\n–í–°" + year + ": \t" + DOCLINKS[year]
    update.message.reply_text(links)


# —Ñ—É–Ω–∫—Ü–∏—è –æ—Ç–±—Ä–∞–∂–µ–Ω–∏—è —Å—Å—ã–ª–∫–∏ –Ω–∞ google docs —Ç—É—Ä–Ω–∏—Ä–∞ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –≥–æ–¥–∞ (year)
def link(bot, update, year):
    """Send a message when the command /links is issued."""
    links = ""
    links = DOCLINKS[year]
    update.message.reply_text(links)


# —Ñ—É–Ω–∫—Ü–∏—è, –≤—ã–∑—ã–≤–∞—é—â–∞—è –Ω—É–∂–Ω—ã–π –º–µ—Ç–æ–¥ –∏—Å—Ö–æ–¥—è –∏–∑ —Ç–µ–∫—Å—Ç–∞ –∑–∞–ø—Ä–æ—Å–∞
def echo(bot, update):
    """Echo the user message."""
    # update.message.reply_text(update.message.text)
    print("We in echo")
    echotext = update.message.text
    echotext = echotext.lower()

    if echotext in HELP_SYNONYMS:
        help(bot, update)
    elif echotext in WINNER_SYNONYMS:
        winners(bot, update)
    elif echotext in TABLE_SYNONYMS:
        table2017(bot, update)
    elif echotext in LINK_SYNONYMS:
        links(bot, update)
    elif echotext in TEAMS_SYNONYMS:
        teamlist(bot, update)
    elif echotext in REGLAMENT_SYNONUMS:
        reglament(bot, update)
    else:
        update.message.reply_text('–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —è —Ç–µ–±—è –Ω–µ –ø–æ–Ω—è–ª üòî')
        help(bot, update)


# —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ–∂–µ–ª–∞–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º
def mywish(bot, update, args):
    msg = ""
    for arg in args:
        msg = msg + " " + arg
    with open('wishes/wishes.txt', 'a') as w_file:
        w_file.write(update.message.from_user.first_name + " " + update.message.from_user.last_name + ": " + msg + "\n")
    bot.send_message(chat_id=230308082,
                     text=update.message.from_user.first_name + " " + update.message.from_user.last_name + ": " + msg)
    update.message.reply_text('–°–ø–∞—Å–∏–±–æ! –¢–≤–æ–µ –º–Ω–µ–Ω–∏–µ –æ—á–µ–Ω—å –≤–∞–∂–Ω–æ –¥–ª—è –Ω–∞—Å!')


def error(bot, update, error):
    """Log Errors caused by Updates."""
    logger.warning('Update "%s" caused error "%s"', update, error)


# —Ñ—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –º–µ–Ω—é-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
def keyboard(bot, update):
    #    custom_keyboard = [["üèÜ–í—Å–µ –ø–æ–±–µ–¥–∏—Ç–µ–ª–∏", "‚öΩ–°–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤"],
    #                       ["‚ûï–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –º–∞—Ç—á–µ–π", "üìù–†–µ–≥–ª–∞–º–µ–Ω—Ç —Ç—É—Ä–Ω–∏—Ä–∞"],
    #                       ["‚úè–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ", "üìÖ–ò—Ç–æ–≥–∏ —Ç—É—Ä–Ω–∏—Ä–∞ –í–°2017"],
    #                       ["‚ö†–ü–æ–º–æ—â—å"]]

    custom_keyboard = [["üîõ–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –º–∞—Ç—á–µ–π", "üîú–ë–ª–∏–∂–∞–π—à–∏–µ –º–∞—Ç—á–∏"],
                       ["‚öΩ–°–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤", "üìù–†–µ–≥–ª–∞–º–µ–Ω—Ç —Ç—É—Ä–Ω–∏—Ä–∞"],
                       ["üìÖ–ê—Ä—Ö–∏–≤"],
                       ["‚úè–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ"],
                       ["‚ö†–ü–æ–º–æ—â—å"]]

    reply_markup = ReplyKeyboardMarkup(custom_keyboard)

    update.message.reply_text('–ú–æ–∂–µ—à—å –≤—ã–±—Ä–∞—Ç—å:', reply_markup=reply_markup)


# —Ñ—É–Ω–∫—Ü–∏—è –≤—ã–±–æ—Ä–∞ –≥–æ–¥–∞ (–Ω–∞–¥–æ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ –±–µ—Å–µ–¥—É)
def yearchoise(bot, update):
    keyboard = [[InlineKeyboardButton("2Ô∏è‚É£0Ô∏è‚É£1Ô∏è‚É£7Ô∏è‚É£", callback_data='2017'),
                 InlineKeyboardButton("2Ô∏è‚É£0Ô∏è‚É£1Ô∏è‚É£8Ô∏è‚É£", callback_data='2018')]]

    reply_markup = InlineKeyboardMarkup(keyboard)

    update.message.reply_text('–í—ã–±–µ—Ä–∏ –≥–æ–¥:', reply_markup=reply_markup)


@restricted
def msg(bot, update, args):
    """Send a message when the command /sendmessage is issued."""
    sender_chat_id = update.message.chat_id
    msg = ' '.join(args)
    for arg in args:
        msg = msg + " " + arg
    chat_ids, firstnames, fullnames = getchatids()
    i = 0
    for chat_id, name in zip(chat_ids, firstnames):
        i = i + 1
        if not name:
            name = "—É–≤–∞–∂–∞–µ–º—ã–π —É—á–∞—Å—Ç–Ω–∏–∫ —Å–æ—Ä–µ–≤–Ω–æ–≤–∞–Ω–∏—è"
        bot.send_message(chat_id=chat_id, text=name + ", " + msg)
    msginsert(sender_chat_id, '', msg)

@restricted
def vsmsg(bot, update, args):
    """Send a message when the command /sendmessage is issued."""
    sender_chat_id = update.message.chat_id
    msg = ' '.join(args)
    #for arg in args:
    #    msg = msg + " " + arg
    chat_ids, firstnames, fullnames = getvschatids()
    i = 0
    for chat_id, name in zip(chat_ids, firstnames):
        i = i + 1
        if not name:
            name = "—É–≤–∞–∂–∞–µ–º—ã–π —É—á–∞—Å—Ç–Ω–∏–∫ —Å–æ—Ä–µ–≤–Ω–æ–≤–∞–Ω–∏—è"
        bot.send_message(chat_id=chat_id, text=name + ", " + msg)
    msginsert(sender_chat_id, '', msg)

def msgto(bot, update, args):
    """Send a message when the command /msgto is issued."""
    sender_chat_id = update.message.chat_id
    if not args:
        msg_help = """
–î–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –Ω–∞–ø–∏—à–∏—Ç–µ '/msgto user_id –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è'. –ù–∞–ø—Ä–∏–º–µ—Ä, '/msgto 230308082 –ü—Ä–∏–≤–µ—Ç, –û–ª–µ–≥!'
"""
        msg_users = """
        –ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –º–æ–∂–Ω–æ –Ω–∞–ø–∏—Å–∞—Ç—å —Å–ª–µ–¥—É—é—â–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º (user_id - –ø–µ—Ä–≤—ã–π —Å—Ç–æ–ª–±–µ—Ü):\n
"""
        chat_ids, firstnames, fullnames = getchatids()
        for chat_id, name in zip(chat_ids, fullnames):
            msg_users = msg_users + chat_id + "\t\t" + name + "\n"
        update.message.reply_text(msg_help)
        time.sleep(2)
        update.message.reply_text(msg_users)
    else:
        msg = ""
        j = 0
        chat_id = args[0]

        for arg in args:
            if j > 0:
                msg = msg + " " + arg
            j = j + 1
        bot.send_message(chat_id=chat_id, text=msg)
        msginsert(sender_chat_id, chat_id, msg)


def archive(bot, update):
    reply_keyboard = [["üèÜ–í—Å–µ –ø–æ–±–µ–¥–∏—Ç–µ–ª–∏", "üìÖ–¢—É—Ä–Ω–∏—Ä–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞ –í–°2017"],
                      ['–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –º–∞—Ç—á–µ–π'], ["üîô–ù–∞–∑–∞–¥"]]

    update.message.reply_text(
        'üëáüèΩ',
        reply_markup=ReplyKeyboardMarkup(reply_keyboard, one_time_keyboard=True))


def cancel(bot, update):
    bot.sendMessage(update.message.chat_id, "Bye!")
    return ConversationHandler.END


@restricted
def shuffle(bot, update):
    teams = getteamlist('2018')
    dicteam = {}
    diclist = ""
    # chat_ids = [230308082, 186972507]
    # fullnames = ["–û–ª–µ–≥", "Alex"]
    chat_ids, firstnames, fullnames = getchatids()
    for chat_id, name in zip(chat_ids, fullnames):
        bot.send_message(chat_id=chat_id,
                         text=name + ", —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥ –Ω–∞—á–Ω–µ—Ç—Å—è –∂–µ—Ä–µ–±—å–µ–≤–∫–∞ —Ç—É—Ä–Ω–∏—Ä–∞ –í–æ—Ä–æ—à–∏–ª–æ–≤—Å–∫–∏–π —Å—Ç—Ä–µ–ª–æ–∫ 2018!")
        time.sleep(2)
        bot.send_message(chat_id=chat_id,
                         text="–ù–∞–ø–æ–º–∏–Ω–∞—é, —á—Ç–æ –∫–∞–ª–µ–Ω–¥–∞—Ä—å –º–∞—Ç—á–µ–π —É–∂–µ —Å–æ—Å—Ç–∞–≤–ª–µ–Ω, –Ω–æ –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω—ã –Ω–æ–º–µ—Ä–∞ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤.")
    time.sleep(6)
    for chat_id in chat_ids:
        bot.send_message(chat_id=chat_id, text="–ò—Ç–∞–∫... —Å—Ç–∞—Ä—Ç—É–µ–º!")
    time.sleep(2)
    for item, team in zip(random.sample(range(1, 11), 10), teams):
        dicteam[item] = team
        time.sleep(1)
        for chat_id in chat_ids:
            bot.send_message(chat_id=chat_id, text="–í—ã—Ç–∞—Å–∫–∏–≤–∞—é –Ω–æ–º–µ—Ä –¥–ª—è –∫–æ–º–∞–Ω–¥—ã " + team + "...")
            # update.message.reply_text("–ò—Ç–∞–∫, –≤—ã–±–µ—Ä–µ–º –Ω–æ–º–µ—Ä –¥–ª—è –∫–æ–º–∞–Ω–¥—ã " + team[0])
        time.sleep(12)
        for chat_id in chat_ids:
            bot.send_message(chat_id=chat_id, text="–ö–æ–º–∞–Ω–¥–∞ –ø–æ–ª—É—á–∞–µ—Ç –Ω–æ–º–µ—Ä: " + str(item) + "!")
        time.sleep(8)
        # update.message.reply_text("–ö–æ–º–∞–Ω–¥–∞ –ø–æ–ª—É—á–∞–µ—Ç –Ω–æ–º–µ—Ä: " + str(item))

    for key, value in sorted(dicteam.items()):
        diclist = diclist + "\n–ö–æ–º–∞–Ω–¥–∞" + str(key) + ":\t\t" + dicteam[key]
    for chat_id in chat_ids:
        bot.send_message(chat_id=chat_id, text="–ò—Ç–æ–≥–æ–≤—ã–µ –Ω–æ–º–µ—Ä–∞ –∫–æ–º–∞–Ω–¥:\t\t" + diclist)


def keyboardecho(bot, update):
    """Echo the user message."""
    sender_chat_id = update.message.chat_id
    print("We in keyboardecho")
    echotext = update.message.text
    queryinsert(sender_chat_id, echotext)
    # echotext = echotext.lower()
    if echotext == "‚öΩ–°–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤":
        teamlist(bot, update)

    elif echotext == "üìù–†–µ–≥–ª–∞–º–µ–Ω—Ç —Ç—É—Ä–Ω–∏—Ä–∞":
        reglament(bot, update)

    elif echotext == "üìÖ–ê—Ä—Ö–∏–≤":
        archive(bot, update)

    elif echotext == "‚úè–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ":
        msgto(bot, update, "")

    elif echotext == "‚ö†–ü–æ–º–æ—â—å":
        help(bot, update)

    elif echotext == "üèÜ–í—Å–µ –ø–æ–±–µ–¥–∏—Ç–µ–ª–∏":
        winners(bot, update)
        archive(bot, update)

    elif echotext == "üìÖ–¢—É—Ä–Ω–∏—Ä–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞ –í–°2017":
        table2017(bot, update)
        archive(bot, update)

    elif echotext == "–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –º–∞—Ç—á–µ–π":
        teams(bot, update)
        # archive(bot, update)

    elif echotext in getteamlist('2017'):
        chat_id = update.message.chat_id
        matches = getmatchschedule(echotext, '2017', '', 1)
        match_text = ""
        for match in matches:
            match_text = match_text + "\n" + str(match[4]) + ":\t\t" + str(match[0]) + " " + str(
                match[2]) + " - " + str(match[3]) + " " + str(match[1])
        update.message.reply_text(match_text)
        archive(bot, update)

    elif echotext == "üîô–ù–∞–∑–∞–¥":
        keyboard(bot, update)

    elif echotext == "üîö–ù–∞–∑–∞–¥":
        archive(bot, update)

    elif echotext == "üîú–ë–ª–∏–∂–∞–π—à–∏–µ 5Ô∏è‚É£ –º–∞—Ç—á–µ–π":
        next5games(bot, update)
        gamecalendar(bot, update)

    elif echotext == "üîú–ë–ª–∏–∂–∞–π—à–∏–µ –º–∞—Ç—á–∏":
        chat_id = update.message.chat_id
        date = getnextsunday()
        matches = getplannedgames(date)
        if len(matches) == 0:
            next5games(bot, update)
        else:
            match_text = ""
            for match in matches:
                if match[7]:
                    date_text = str(match[7]) + ": "
                else:
                    date_text = ""
                match_text = match_text + "\n" + date_text + str(match[1]) + str(
                    match[3]) + " - " + str(match[6]) + str(match[4]) + " " + ". –¢—É—Ä " + str(match[8])
            update.message.reply_text("–ù–∞ –±–ª–∏–∂–∞–π—à–µ–µ –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏–µ —Å–ª–µ–¥—É—é—â–∏—Ö –º–∞—Ç—á–µ–π:")
            time.sleep(1)
            update.message.reply_text(match_text)
            time.sleep(2)
        gamecalendar(bot, update)


    elif echotext == "üîõ–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –º–∞—Ç—á–µ–π":
        chat_id = update.message.chat_id
        matches = getmatchschedule('', '2018', 5, 1)
        match_text = ""
        for match in matches:
            date = ""
            if match[4]:
                date = " (" + str(match[4]) + ")"
            match_text = match_text + "\n" + str(match[0]) + str(match[6]) + " " + str(match[2]) + " - " + str(
                match[3]) + " " + str(match[7]) + str(match[1]) + str(date)
        update.message.reply_text("–ü–æ—Å–ª–µ–¥–Ω–∏–µ 5Ô∏è‚É£  —Å—ã–≥—Ä–∞–Ω–Ω—ã—Ö –º–∞—Ç—á–µ–π:")
        time.sleep(1)
        update.message.reply_text(match_text)
        time.sleep(2)
        gameresult(bot, update)

    elif echotext == "üëãüèΩ–ì–æ—Ç–æ–≤!":
        ready2play(bot, update, True)
        gamecalendar(bot, update)

    elif echotext == "üö∑–ù–µ –≥–æ—Ç–æ–≤":
        ready2play(bot, update, False)
        gamecalendar(bot, update)

    elif echotext == "üö∑–û—Ç–º–µ–Ω–∏—Ç—å –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å":
        ready2play(bot, update, False)
        gamecalendar(bot, update)

    elif echotext == "‚≠ï–°–≤–æ–∏ –æ—Å—Ç–∞–≤—à–∏–µ—Å—è –º–∞—Ç—á–∏":
        chat_id = str(update.message.chat_id)
        yourteam = getyourteam(chat_id, 2018)
        if yourteam:
            update.message.reply_text("–¢–µ–±–µ –ø—Ä–µ–¥—Å—Ç–æ–∏—Ç —Å—ã–≥—Ä–∞—Ç—å —Å–ª–µ–¥—É—é—â–∏–µ –º–∞—Ç—á–∏:")
            time.sleep(1)
            matches = getmatchschedule(yourteam, '2018', '', 0)
            match_text = ""
            for match in matches:
                match_text = match_text + "\n" + str(match[0]) + str(match[6]) + " - " + str(match[7]) + str(match[1])
            update.message.reply_text(match_text)
        gamecalendar(bot, update)

    elif echotext == "‚úÖ–°–≤–æ–∏ —Å—ã–≥—Ä–∞–Ω–Ω—ã–µ –º–∞—Ç—á–∏":
        update.message.reply_text("–¢—ã –µ—â–µ –Ω–µ —Å—ã–≥—Ä–∞–ª –Ω–∏ –æ–¥–Ω–æ–π –∏–≥—Ä—ã üò≥")
        gamecalendar(bot, update)

    elif echotext == "üóì–¢—É—Ä–Ω–∏—Ä–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞":
        chat_id = str(update.message.chat_id)
        tables = gettournamenttable(6)
        tabletxt = ""
        row = ""
        for r in tables:
            row = row + "\n"
            for f in r:
                row = row + "\t     " + str(f)
        tabletxt = tabletxt + "\n" + row
        update.message.reply_text("–ö–æ–º–∞–Ω–¥–∞\t\t–í\t\t–ù\t\t–ü\t\t–ó–∞–±–∏—Ç–æ\t\t–ü—Ä–æ–ø—É—â–µ–Ω–æ\t\t–†–∞–∑–Ω–∏—Ü–∞\t\t–û—á–∫–∏" + tabletxt)
        #update.message.reply_text(tabletxt)
        gameresult(bot, update)

    else:
        echo(bot, update)


# —Ñ—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥
def teams(bot, update):
    chat_id = str(update.message.chat_id)
    yourteam = getyourteam(chat_id, 2017)
    if yourteam:
        update.message.reply_text("–û! –Ø —Å–º–æ—Ç—Ä—é, —Ç—ã —É–∂–µ —É—á–∞—Å—Ç–≤–æ–≤–∞–ª –≤ —Ç—É—Ä–Ω–∏—Ä–µ –í–° üèÅ.\n–í–æ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–≤–æ–∏—Ö –º–∞—Ç—á–µ–π:")
        time.sleep(1)
        matches = getmatchschedule(yourteam, '2017', '', 1)
        match_text = ""
        for match in matches:
            match_text = match_text + "\n" + str(match[4]) + ":\t\t" + str(match[0]) + " " + str(
                match[2]) + " - " + str(match[3]) + " " + str(match[1])
        update.message.reply_text(match_text)
    teams = getteamlist('2017')
    teams_keyboard = []
    teams_1 = []
    teams_2 = []
    teams_3 = []
    teams_keyboard = [teams_1, teams_2, teams_3, ["üîö–ù–∞–∑–∞–¥"]]
    i = 0
    for team in teams:
        if i < 4:
            teams_1.append(team)
        elif i > 3 and i < 8:
            teams_2.append(team)
        else:
            teams_3.append(team)
        i = i + 1
    reply_markup = ReplyKeyboardMarkup(teams_keyboard, one_time_keyboard=True)
    time.sleep(2)
    update.message.reply_text('–ú–æ–∂–µ—à—å –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –º–∞—Ç—á–µ–π –¥—Ä—É–≥–æ–π –∫–æ–º–∞–Ω–¥—ã –ª–∏–±–æ –≤–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥:',
                              reply_markup=reply_markup)


def gamecalendar(bot, update):
    chat_id = update.message.chat_id
    is_answer = answaboutready(chat_id, str(getnextsunday()))
    is_ready = isready(chat_id, str(getnextsunday()), True)
    is_not_ready = isready(chat_id, str(getnextsunday()), False)
    if is_answer == 0:
        reply_keyboard = [["üëãüèΩ–ì–æ—Ç–æ–≤!", "üö∑–ù–µ –≥–æ—Ç–æ–≤", ],
                          ["üîú–ë–ª–∏–∂–∞–π—à–∏–µ 5Ô∏è‚É£ –º–∞—Ç—á–µ–π"],
                          ["‚≠ï–°–≤–æ–∏ –æ—Å—Ç–∞–≤—à–∏–µ—Å—è –º–∞—Ç—á–∏", "‚úÖ–°–≤–æ–∏ —Å—ã–≥—Ä–∞–Ω–Ω—ã–µ –º–∞—Ç—á–∏"],
                          ["üîô–ù–∞–∑–∞–¥"]]
        text = "‚ÄºÔ∏è–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ‚ÄºÔ∏è\n–ï—Å–ª–∏ —Ç—ã –ì–æ—Ç–æ–≤ –∏–≥—Ä–∞—Ç—å –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ " + str(getnextsunday()) + ", –∂–º–∏ üëãüèΩ–ì–æ—Ç–æ–≤!\n–ï—Å–ª–∏ –Ω–µ—Ç - –∂–º–∏ üö∑–ù–µ –≥–æ—Ç–æ–≤"
    elif is_ready > 0:
        reply_keyboard = [["üö∑–û—Ç–º–µ–Ω–∏—Ç—å –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å"],
                          ["üîú–ë–ª–∏–∂–∞–π—à–∏–µ 5Ô∏è‚É£ –º–∞—Ç—á–µ–π"],
                          ["‚≠ï–°–≤–æ–∏ –æ—Å—Ç–∞–≤—à–∏–µ—Å—è –º–∞—Ç—á–∏", "‚úÖ–°–≤–æ–∏ —Å—ã–≥—Ä–∞–Ω–Ω—ã–µ –º–∞—Ç—á–∏"],
                          ["üîô–ù–∞–∑–∞–¥"]]
        text = "–¢–∞–∫–∂–µ –º–æ–∂–µ—à—å –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å üëáüèΩ"
    elif is_not_ready > 0:
        reply_keyboard = [['üëãüèΩ–ì–æ—Ç–æ–≤!'],
                          ["üîú–ë–ª–∏–∂–∞–π—à–∏–µ 5Ô∏è‚É£ –º–∞—Ç—á–µ–π"],
                          ["‚≠ï–°–≤–æ–∏ –æ—Å—Ç–∞–≤—à–∏–µ—Å—è –º–∞—Ç—á–∏", "‚úÖ–°–≤–æ–∏ —Å—ã–≥—Ä–∞–Ω–Ω—ã–µ –º–∞—Ç—á–∏"],
                          ["üîô–ù–∞–∑–∞–¥"]]
        text = '–ï—Å–ª–∏ —Ç—ã –≥–æ—Ç–æ–≤ —Å—ã–≥—Ä–∞—Ç—å –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ ' + str(getnextsunday()) + ', –∂–º–∏ üëãüèΩ–ì–æ—Ç–æ–≤!'
    update.message.reply_text(text, reply_markup=ReplyKeyboardMarkup(reply_keyboard, one_time_keyboard=True))

def gameresult(bot, update):
    print("we in gameresult")
    chat_id = update.message.chat_id
    reply_keyboard = [["üóì–¢—É—Ä–Ω–∏—Ä–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞"],
                          ["‚≠ï–°–≤–æ–∏ –æ—Å—Ç–∞–≤—à–∏–µ—Å—è –º–∞—Ç—á–∏", "‚úÖ–°–≤–æ–∏ —Å—ã–≥—Ä–∞–Ω–Ω—ã–µ –º–∞—Ç—á–∏"],
                          ["üîô–ù–∞–∑–∞–¥"]]
    text = "–¢–∞–∫–∂–µ –º–æ–∂–µ—à—å –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å üëáüèΩ"

    update.message.reply_text(text, reply_markup=ReplyKeyboardMarkup(reply_keyboard, one_time_keyboard=True))


def ready2play(bot, update, state):
    chat_id = update.message.chat_id
    cur_year = datetime.date.today().year
    ins2ready(chat_id, str(getnextsunday()), state)
    if not state:
        update.message.reply_text("üôÅ–û—á–µ–Ω—å –∂–∞–ª—å! –ù–∞–¥–µ—é—Å—å, —á—Ç–æ –≤ —Å–ª–µ–¥—É—é—â–µ–µ –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ —É —Ç–µ–±—è –ø–æ–ª—É—á–∏—Ç—Å—è!")
        for chat_id in LIST_OF_ADMINS:
            bot.send_message(chat_id=chat_id,
                             text=update.message.from_user.first_name + " " + update.message.from_user.last_name + " —Å–æ–æ–±—â–∏–ª –æ–± –æ—Ç–º–µ–Ω–µ —Å–≤–æ–µ–π –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Å—ã–≥—Ä–∞—Ç—å –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ " + str(
                                 getnextsunday()))
        team_id = getteamidbytchatid(chat_id, cur_year)
        game_id = getgameidbyteamid(team_id)
        arr = ["date", game_id]
        set(bot, update, arr)
    else:
        update.message.reply_text("üëè–°–ø–∞—Å–∏–±–æ, —á—Ç–æ —Å–æ–æ–±—â–∏–ª! –ë—É–¥—É –∏–º–µ—Ç—å –≤–≤–∏–¥—É !üëç")
        for chat_id in LIST_OF_ADMINS:
            bot.send_message(chat_id=chat_id,
                             text=update.message.from_user.first_name + " " + update.message.from_user.last_name + " —Å–æ–æ–±—â–∏–ª –æ —Å–≤–æ–µ–π –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Å—ã–≥—Ä–∞—Ç—å –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ " + str(
                                 getnextsunday()))
    #gamecalendar(bot, update)


def autoready2play(bot, update, chat_id):
    is_ready = isready(chat_id, str(getnextsunday()), True)
    if is_ready > 0:
        pass
    else:
        ins2ready(chat_id, str(getnextsunday()), True)
        gamecalendar(bot, update)

def next5games(bot, update):
    chat_id = update.message.chat_id
    date = getnextsunday()
    cur_year = datetime.date.today().year
    matches = getmatchschedule('', cur_year, 5, 0)
    match_text = ""
    for match in matches:
        date = ""
        if match[4]:
            date = " (" + str(match[4]) + ")"
        match_text = match_text + "\n" + str(match[0]) + str(match[6]) + " - " + str(match[7]) + str(match[1]) + str(date)
    update.message.reply_text("–ë–ª–∏–∂–∞–π—à–∏–µ 5Ô∏è‚É£ –º–∞—Ç—á–µ–π –ø–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é:")
    time.sleep(1)
    update.message.reply_text(match_text)
    time.sleep(2)


@restricted
def set(bot, update, args):
    if  not args:
        cur_year = datetime.date.today().year
        matches = getnext5games(cur_year)
        match_text = ""
        for match in matches:
            match_text = match_text + "\n" + str(match[0]) + ".\t" + str(match[1]) + " (" + str(match[2]) + ") " + str(
                match[3]) + " - " + str(match[4]) + " (" + str(match[5]) + ") " + str(match[6])
        update.message.reply_text(match_text)
        update.message.reply_text(
            "–î–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –¥–∞—Ç—ã –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è –º–∞—Ç—á–∞ –Ω–∞–ø–∏—à–∏ '/set date game_id date(—Ñ–æ—Ä–º–∞—Ç: YYYY-MM-DD)'\n–î–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –º–∞—Ç—á–∞ –Ω–∞–ø–∏—à–∏ '/set goal game_id goals_one goals_two'")
    elif args[0] == 'date':
        if len(args) == 3:
            chat_id = ""
            insdate(args[1], args[2])
            team_ids = getteamsidingame(args[1])
            for team_id in team_ids:
                chat_id = getchatidbyteamid(team_id)
                arr = ["ready", chat_id]
                set(bot, update, arr)
                first_name = getfullnamebychatid(chat_id)
                msg_text = first_name + ", –º–∞—Ç—á —Å —Ç–≤–æ–∏–º —É—á–∞—Å—Ç–∏–µ–º –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω –Ω–∞ –±–ª–∏–∂–∞–π—à–µ–µ –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ " + str(
                    getnextsunday())
                bot.send_message(chat_id=chat_id, text=msg_text)
                time.sleep(1)
                msg_text = "–ï—Å–ª–∏ —Ç—ã –Ω–µ –≥–æ—Ç–æ–≤ –∏–≥—Ä–∞—Ç—å, —Å–æ–æ–±—â–∏ –æ–± —ç—Ç–æ–º, –Ω–∞–∂–∞–≤ –∫–Ω–æ–ø–∫—É 'üö∑–û—Ç–º–µ–Ω–∏—Ç—å –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å' –≤ –º–µ–Ω—é 'üîú–ë–ª–∏–∂–∞–π—à–∏–µ –º–∞—Ç—á–∏' –∏–ª–∏ –Ω–∞–∂–∞–≤ –Ω–∞ /cancel"
                bot.send_message(chat_id=chat_id, text=msg_text)
            update.message.reply_text("–î–∞—Ç–∞ —É—Å–ø–µ—à–Ω–æ –≤—ã—Å—Ç–∞–≤–ª–µ–Ω–∞")
        elif len(args) == 2:
            chat_id = ""
            insdate(args[1], '')
            team_ids = getteamsidingame(args[1])
            for team_id in team_ids:
                chat_id = getchatidbyteamid(team_id)
                first_name = getfullnamebychatid(chat_id)
                time.sleep(1)
                msg_text = first_name + ", –º–∞—Ç—á —Å —Ç–≤–æ–∏–º —É—á–∞—Å—Ç–∏–µ–º –æ—Ç–º–µ–Ω–µ–Ω"
                bot.send_message(chat_id=chat_id, text=msg_text)
            update.message.reply_text("–î–∞—Ç–∞ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞")
    elif args[0] == 'goal':
        if len(args) == 4:
            insgoal(args[1], args[2], args[3])
        elif len(args) < 4:
            insgoal(args[1], '', '')
        update.message.reply_text("–†–µ–∑—É–ª—å—Ç–∞—Ç –º–∞—Ç—á–∞ —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    elif args[0] == 'ready':
        autoready2play(bot, update, args[1])

    else:
        update.message.reply_text(
            "–î–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –¥–∞—Ç—ã –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è –º–∞—Ç—á–∞ –Ω–∞–ø–∏—à–∏ '/set date game_id date(YYYY-MM-DD'\n–î–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –º–∞—Ç—á–∞ –Ω–∞–ø–∏—à–∏ '/set goal game_id goals_one goals_two'")

@restricted
def whoisready(bot, update):
    cur_year = datetime.date.today().year
    date = getnextsunday()
    ready_teams = getwhoisready(cur_year, date)
    msg_text = ""
    for ready_team in ready_teams:
        msg_text = msg_text + "\n" + str(ready_team[0]) + ". " + str(ready_team[3]) + "    " + str(ready_team[1]) + " " + str(ready_team[2])
    update.message.reply_text("–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ " + str(date) + " –≥–æ—Ç–æ–≤—ã –∏–≥—Ä–∞—Ç—å —Å–ª–µ–¥—É—é—â–∏–µ –∫–æ–º–∞–Ω–¥—ã:")
    time.sleep(1)
    update.message.reply_text(msg_text)
    time.sleep(1)
    possiblegames(bot, update)

@restricted
def possiblegames(bot, update):
    cur_year = datetime.date.today().year
    date = getnextsunday()
    matches = getpossiblegames(6, date, cur_year)
    if len(matches) == 0:
        update.message.reply_text("–ò–∑ –≥–æ—Ç–æ–≤—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ —Å–æ—Å—Ç–∞–≤–∏—Ç—å –ø–∞—Ä—ã üòî")
    else:
        match_text = ""
        for match in matches:
            if match[7]:
                date_text = "(" + str(match[7]) + ")"
            else:
                date_text = ""
            match_text = match_text + "\n" + str(match[0]) + ".\t" + str(match[1]) + " " + str(
            match[3]) + " - " + str(match[4]) + " " + str(match[6]) + ". –¢—É—Ä " + str(match[8]) + " " + str(date_text)
        update.message.reply_text("–ò–∑ –≥–æ—Ç–æ–≤—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –¥–æ—Å—Ç—É–ø–Ω—ã —Å–ª–µ–¥—É—é—â–∏–µ –ø–∞—Ä—ã:")
        time.sleep(1)
        update.message.reply_text(match_text)


@restricted
def admin(bot, update):
    """Send a message when the command /help is issued."""
    text = "–î–µ–π—Å—Ç–≤–∏—è –∞–¥–º–∏–Ω–∏—Å—Ä–∞—Ç–æ—Ä–∞:"
    text += "\n/whoisready - –ø–æ–ª—É—á–∏—Ç—å –∏–≥—Ä–æ–∫–æ–≤ –≤ —Å—Ç–∞—Ç—É—Å–µ –ì–æ—Ç–æ–≤"
    text += "\n/possiblegames - –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –ø–∞—Ä, —Å–æ—Å—Ç–æ—è—â–∏—Ö –∏–∑ –∏–≥—Ä–æ–∫–æ–≤ –≤ —Å—Ç–∞—Ç—É—Å–µ –ì–æ—Ç–æ–≤"
    text += "\n/set - –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å –º–∞—Ç—á, –≤—ã—Å—Ç–∞–≤–∏—Ç—å —Å—á–µ—Ç —Å—ã–≥—Ä–∞–Ω–Ω–æ–≥–æ –º–∞—Ç—á–∞"
    update.message.reply_text(text)

